freebsd_ci_task:
  name: CI / FreeBSD

  freebsd_instance:
    image_family: freebsd-14-2

  install_script: |
    pkg install -y bcftools gmake py311-cython3 py311-mypy py311-pytest samtools

  env:
    CC: "clang -isystem /usr/local/include"
    MAKE: "gmake"
    REF_PATH: ":"

  build_script: |
    python setup.py build

  test_script: |
    PYTHONPATH="$(echo $PWD/build/lib.*)" pytest


build_wheels_task:
  only_if: $CIRRUS_BRANCH =~ "release/.*" || $CIRRUS_TAG =~ "v0\..*"

  matrix:
    - compute_engine_instance:
        image_project: cirrus-images
        image: family/docker-builder-arm64
        architecture: arm64
        platform: linux
      matrix:
        - name: Build ARM Linux py3.8-9 wheels
          env:
            CIBW_BUILD: "cp38-* cp39-*"
        - name: Build ARM Linux py3.10-11 wheels
          env:
            CIBW_BUILD: "cp310-* cp311-*"
        - name: Build ARM Linux py3.12-13 wheels
          env:
            CIBW_BUILD: "cp312-* cp313-*"

    - name: Build ARM macOS wheels
      macos_instance:
        image: ghcr.io/cirruslabs/macos-sonoma-base:latest
      env:
        CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

  alias: build_wheels

  env:
    CIRRUS_CLONE_DEPTH: 1

    VENV: $HOME/relenv
    PATH: $VENV/bin:$PATH

    CIBW_BUILD_VERBOSITY: 1

    # Avoid linking with non-system library libdeflate.dylib
    CIBW_ENVIRONMENT_MACOS: HTSLIB_CONFIGURE_OPTIONS="--without-libdeflate"

    CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
    CIBW_MUSLLINUX_AARCH64_IMAGE: musllinux_1_2

  install_script: |
    python3 -m venv $VENV
    pip3 install cibuildwheel==2.23.3

  build_script: |
    cibuildwheel

  wheels_artifacts:
    path: wheelhouse/*.whl

upload_pypi_task:
  only_if: $CIRRUS_BRANCH =~ "release/.*" || $CIRRUS_TAG =~ "v0\..*"
  depends_on: build_wheels

  name: Publish ARM wheels

  container:
    image: python:latest

  env:
    CIRRUS_CLONE_DEPTH: 1
    API_BASEURL: https://api.cirrus-ci.com/v1
    TWINE_USERNAME: __token__

  install_script: |
    python3 -m pip install twine

  get_artifacts_script: |
    curl -sSLO $API_BASEURL/artifact/build/$CIRRUS_BUILD_ID/wheels.zip
    unzip -q wheels.zip

  upload_script: |
    case "$CIRRUS_TAG" in
    v0.*)
        export TWINE_REPOSITORY=pypi TWINE_PASSWORD=$PYPI_TOKEN ;;
    *)
        export TWINE_REPOSITORY=testpypi TWINE_PASSWORD=$TESTPYPI_TOKEN ;;
    esac

    echo Uploading wheels to $TWINE_REPOSITORY...

    python3 -m twine check wheelhouse/*.whl
    python3 -m twine upload --disable-progress-bar wheelhouse/*.whl
